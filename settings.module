set guioptions=egmt
filetype plugin indent on

" TMUX Clipboard
if $TMUX == ''
  set clipboard+=unnamed
endif

"folding
set foldmethod=syntax
set foldlevelstart=6

let javaScript_fold=1

let g:ctrlp_follow_symlinks = 2

" vim-only mode.
set nocompatible

"set mouse=
set mouse=nvi

" highlight trailing whitespace
set list listchars=trail:Â·,tab:>-


" strip white space
autocmd BufWritePre * :call <SID>StripWhite()
fun! <SID>StripWhite()
    %s/[ \t]\+$//ge
    %s!^\( \+\)\t!\=StrRepeat("\t", 1 + strlen(submatch(1)) / 8)!ge
endfun

autocmd BufNewFile,BufRead *.coffee set filetype=coffee

" nerdtree
let NERDTreeShowHidden=1

" backups and swapfiles
set nobackup
set noswapfile

try
  " persistent undo
  set undodir=~/.vim/undodir
  set undofile

  set colorcolumn=85
catch /Unknown option/
  " For versions of Vim prior to 7.3.
endtry

" 2 spaces for tabs.
set autoindent
set smartindent
set softtabstop=2
set shiftwidth=2
set tabstop=4
set expandtab
set nosmarttab

" sensible backspace behaviour
set backspace=2

" use ack instead of grep
set grepprg=ack
set grepformat=%f:%l:%m

" ui
set ruler
set noshowcmd
set nolazyredraw
set number
set nostartofline
set cursorline
set showmatch
set virtualedit=block
"set background=dark
"colorscheme solarized

" searching
set hlsearch
set incsearch

set wildignore+=tmp/**,cache/**,log/**

set path-=tmp/
set path-=cache/
set path-=log/

" Status line
set statusline=%F%m%r%h%w\
set statusline+=%{fugitive#statusline()}\
set statusline+=[%{strlen(&fenc)?&fenc:&enc}]
set statusline+=\ [line\ %l\/%L]


" let g:airline_theme_patch_func = 'AirlineThemePatch'
" function! AirlineThemePatch(palette)
"   if g:airline_theme == 'badwolf'
"     for colors in values(a:palette.inactive)
"       let colors[3] = 245
"     endfor
"   endif
" endfunction

syntax enable
